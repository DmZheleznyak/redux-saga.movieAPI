{"version":3,"sources":["store/actions/actionTypes.js","store/actions/actionCreators.js","header/Header.js","components/UI/ButtonsFavouriteMovies/ButtonsFavouriteMovies.js","cartOfMovie/cartOfMovie.js","infoTheMovie/InfoTheMovie.js","listSearchMovies/ListSearch.js","components/Autentification/Autentification.js","components/ListFavouriteMovies/ListFavouriteMovies.js","App.js","serviceWorker.js","store/reducers/rootReducer.js","store/sagas/sagas.js","store/sagas/rootSaga.js","store/store.js","index.js"],"names":["GET_LOAD_MOVIE","GET_LOAD_SEARCH_MOVIES","GET_LOAD_MORE_SEARCH_MOVIES","getSearchMovies","data","currentPage","totalPages","type","getMoreSearchMovies","addFavouriteMovie","movie","removeFavouriteMovie","Header","state","searchField","event","preventDefault","this","setState","target","value","_this2","requestSearchMovies","axios","get","concat","console","log","props","getLoadSearchMovies","react_default","a","createElement","AppBar_default","position","style","height","index_es","display","alignItems","justifyContent","Link","to","window","matchMedia","matches","styleMainName","Button_default","Typography_default","variant","margin","onSubmit","onFormSubmit","InputBase_default","placeholder","backgroundColor","width","paddingLeft","marginLeft","onChange","onSearchFieldChange","bind","onClick","onButtonSearchClick","Search_default","Component","connect","autentification","dispatch","req","actionTypes","AddButtonFavouriteMovie","add","movieFromCurrentList","size","color","FavoriteBorder_default","AddFavouriteMovie","favouriteMovies","length","some","id","RemoveFavoriteMovie","remove","map","Favorite_default","RemoveButtonFavouriteMovie","CartOfMovie","popMovies","popMovie","genreNames","genre_ids","genre_id","genreMovie","genre","push","name","listOfGenres","key","Card_default","marginBottom","flexDirection","CardMedia_default","image","poster_path","title","gutterBottom","flexGrow","marginTop","fontWeight","component","textAlign","overview","CardActions_default","flexWrap","InfoTheMovie","dataMovie","recomendationMovies","location","pathname","then","res","catch","err","message","results","Genres","undefined","genres","i","showRecomendationMovies","backdrop_path","budget","vote_average","release_date","searchMovies","getLoadMoreSearchMovies","requestMoreSearchMovies","ListSearchMovies","paddingTop","paddingBottom","lenght","slice","TextField_default","error","label","autoComplete","FavouriteMovies","App","getPopularMovie","_this","BrowserRouter","basename","className","Route","path","exact","cartOfMovie_cartOfMovie","popularMovieList","ListSearch","Autentification","ListFavouriteMovies","getInfoMovie","Boolean","hostname","match","initialState","infoMovie","requestSearchMovie","rootReducer","arguments","action","Object","objectSpread","toConsumableArray","filter","getPopularMovieSaga","getGenreMovieSaga","getSearchMoviesSaga","getMoreSearchMoviesSaga","requestPopularMovie","requestGenreMovie","result","regenerator_default","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","_context2","_marked2","_context3","page","total_pages","_marked3","_context4","_marked4","rootSaga","takeEvery","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","applyMiddleware","persistState","run","ReactDOM","render","es","Store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25349b9d.chunk.js","sourcesContent":["export const GET_LOAD_MOVIE = 'GET_LOAD_MOVIE'\nexport const GET_POPULAR_MOVIE = 'GET_POPULAR_MOVIE'\nexport const GET_GENRE_LIST = 'GET_GENRE_LIST'\n\nexport const GET_LOAD_INFO_MOVIE = 'GET_LOAD_INFO_MOVIE'\n\nexport const GET_LOAD_SEARCH_MOVIES = 'GET_LOAD_SEARCH_MOVIES'\nexport const GET_SEARCH_MOVIES = 'GET_SEARCH_MOVIES'\nexport const GET_LOAD_MORE_SEARCH_MOVIES = 'GET_LOAD_MORE_SEARCH_MOVIES'\nexport const GET_MORE_SEARCH_MOVIES = 'GET_MORE_SEARCH_MOVIES'\n\nexport const ADD_FAVOURITE_MOVIE = 'ADD_FAVOURITE_MOVIE'\nexport const REMOVE_FAVOURITE_MOVIE = 'REMOVE_FAVOURITE_MOVIE'","import * as actionTypes from './actionTypes'\n\nexport const getPopularMovie = () => ({\n    type: actionTypes.GET_LOAD_MOVIE\n})\n\nexport const getInfoMovie = () => ({\n    type: actionTypes.GET_LOAD_INFO_MOVIE\n})\n\nexport const getLoadSearchMovies = ( req, searchField ) => ({\n        type: actionTypes.GET_LOAD_SEARCH_MOVIES, \n        requestSearchMovies: req,\n        searchField \n})\n\nexport const getSearchMovies = (data, currentPage, totalPages) => ({\n    type: actionTypes.GET_SEARCH_MOVIES,\n    data,\n    currentPage,\n    totalPages\n})\n\nexport const getLoadMoreSearchMovies = req => ({\n    type: actionTypes.GET_LOAD_MORE_SEARCH_MOVIES,\n    requestMoreSearchMovies: req\n})\n\nexport const getMoreSearchMovies = (data, currentPage, totalPages) => ({\n    type: actionTypes.GET_MORE_SEARCH_MOVIES,\n    data,\n    currentPage,\n    totalPages\n})\n\n\nexport const addFavouriteMovie = movie => ({\n    type: actionTypes.ADD_FAVOURITE_MOVIE,\n    movie\n})\n\nexport const removeFavouriteMovie = movie => ({\n    type: actionTypes.REMOVE_FAVOURITE_MOVIE,\n    movie\n})","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Toolbar } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { getLoadSearchMovies } from '../store/actions/actionCreators';\n\nclass Header extends Component {\n\tstate = {\n\t\tsearchField: ''\n\t}\n\n\tonFormSubmit(event) {\n\t\tevent.preventDefault();\n\t}\n\n\tonSearchFieldChange( event ) {\n\t\tthis.setState({ searchField: event.target.value })\n\t}\n\n\tonButtonSearchClick() {\n\t\tconst requestSearchMovies = () =>\n\t\t\taxios.get(`https://api.themoviedb.org/3/search/movie?api_key=e842780f24447ce021759d2711fd23ce&language=en-US&query=${this.state.searchField}&page=1&include_adult=false`)\n\t\tconsole.log(`requestSearchMovies in header`, requestSearchMovies)\t\n\t\tthis.props.getLoadSearchMovies( requestSearchMovies, this.state.searchField )\n\t}\n\n\trender () {\n\t\tconst styleMainName = () => {\n\t\t\tif (window.matchMedia(\"(max-width: 600px)\").matches) {\n\t\t\t\treturn {\n\t\t\t\t\tdisplay: \"none\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst styleButtonFavouriteMovies = () => {\n\t\t\tif (window.matchMedia(\"(max-width: 600px)\").matches) {\n\t\t\t\treturn {\n\t\t\t\t\tmargin: '0'\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tmargin: '0 20px'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<AppBar position=\"static\" style={{ height: \"60px\" }}>\n\t\t\t\t<Toolbar style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n\t\t\t\t\t<Link to={'/'} style={ styleMainName() }>\n\t\t\t\t\t\t<Button><Typography variant=\"h5\">Stars Collection</Typography></Button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to={'/favouriteMovies'} style={ styleButtonFavouriteMovies() }>\n\t\t\t\t\t\t<Button> Favorite Movies </Button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t{/* <Link to={`/autentification`}>\n\t\t\t\t\t\t<Button>{this.props.autentification ? `Sign out` : `Sign in`}</Button>\n\t\t\t\t\t</Link> */}\n\t\t\t\t\t<form \n\t\t\t\t\t\tstyle={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }} \n\t\t\t\t\t\tonSubmit={ this.onFormSubmit }>\n\t\t\t\t\t\t<InputBase \n\t\t\t\t\t\t\tplaceholder=\"search...\"\n\t\t\t\t\t\t\tstyle={{ backgroundColor: \"white\", width: '75%', paddingLeft: '4%', marginLeft: '14%' }}\n\t\t\t\t\t\t\tonChange={ this.onSearchFieldChange.bind(this) }\t/>\n\t\t\t\t\t\t{/* <p> { this.state.searchField } </p> */}\t\n\t\t\t\t\t\t<Link to={`/search`}>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tonClick={ this.onButtonSearchClick.bind(this) }><SearchIcon/>Search</Button>\n\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t</form>\n\t\t\t\t</Toolbar>\t\t\t\t\t\t\n\t\t\t</AppBar>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tautentification: state.autentification\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tgetLoadSearchMovies: (requestSearchMovies, searchField) => dispatch( getLoadSearchMovies(requestSearchMovies, searchField) )\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react'\n\nimport Button from '@material-ui/core/Button';\nimport AddedFavoriteIcon from '@material-ui/icons/Favorite' \nimport FavoriteIcon from '@material-ui/icons/FavoriteBorder'\n\nconst RemoveButtonFavouriteMovie = (remove, movieFromCurrentList ) => (\n    <Button size=\"small\" color=\"primary\" onClick={() => remove(movieFromCurrentList)}>\n        <AddedFavoriteIcon />\n        Delete from Favorites\n    </Button>\n)\t\nconst AddButtonFavouriteMovie = (add, movieFromCurrentList) => (\n    <Button size=\"small\" color=\"primary\" onClick={() => add(movieFromCurrentList)}>\n        <FavoriteIcon />\n        Share to Favorites\n    </Button>\n)\n\nexport const AddFavouriteMovie = (favouriteMovies, movieFromCurrentList, add) => {\n    if ( favouriteMovies.length === 0 ) {\n        return (\n            <div>\n                { AddButtonFavouriteMovie(add, movieFromCurrentList) }\n            </div>\n        )\n    }\n\n    if ( !favouriteMovies.some( movie => movie.id === movieFromCurrentList.id ) ) {\n        return (\n            <div>\n                { AddButtonFavouriteMovie(add, movieFromCurrentList) }\n            </div>\n        )\n    }\n}\nexport const RemoveFavoriteMovie = (favouriteMovies, movieFromCurrentList, remove) => favouriteMovies.map(movie => {\n    if (movie.id === movieFromCurrentList.id) {\n        return ( \n            <div>\n                { RemoveButtonFavouriteMovie(remove, movieFromCurrentList)}\n            </div>\n        )\t\n    } \n}  )","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from '../../node_modules/@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n// import AddedFavoriteIcon from '@material-ui/icons/Favorite' \n// import FavoriteIcon from '@material-ui/icons/FavoriteBorder'\nimport { AddFavouriteMovie, RemoveFavoriteMovie } from '../components/UI/ButtonsFavouriteMovies/ButtonsFavouriteMovies';\nimport { Link } from 'react-router-dom';\nimport { addFavouriteMovie, removeFavouriteMovie } from '../store/actions/actionCreators';\n\nfunction cartOfMovie( props ) {\n// creat showcart of the movie\n// go to array  \n\tconst popMovies = props.popMovies.map(popMovie => {\n// get name (not id) of genres for each films ---------------\n\t\tconst genreNames = []\n\t\tpopMovie.genre_ids.map(genre_id => {\n// take our movie's genres id \n// and equal with each id from all list genres\t\t\t\n\t\t\tprops.genreMovie.map(genre => {\n\t\t\t\t\tif (genre_id === genre.id) {\n// find name genre, what we need  \n// (not id, because after we render on start page)\n// and give to genreNames array\t\t\t\t\t\t\n\t\t\t\t\t\treturn genreNames.push( genre.name ) \n\t\t\t\t\t}\n\t\t\t\t})\n\t\t})\n\tconst listOfGenres = genreNames.map(genre => (\n\t\t<span key={ genre.id }>  { genre }  </span> \n\t))\n\n\tconst styleCard = () => {\n\t\tif (window.matchMedia(\"(max-width: 600px)\").matches) {\n\t\t\treturn { width: `94%`, marginBottom: '2%' }\n\t\t} else if (window.matchMedia(\"(max-width: 900px)\").matches) {\n\t\t\treturn { display: 'flex', flexDirection: 'column', width: `48%`, marginBottom: '2%' }\n\t\t} else {\n\t\t\treturn { display: 'flex', flexDirection: 'column', width: `32%`, marginBottom: '2%' }\n\t\t}\t\t\n\t}\n\n\t\t\t\n\treturn <Card key={ popMovie.id } style={ styleCard() }>\n\t\t\t<CardMedia\n\t\t\t\tstyle={{ height: `200px` }}\n\t\t\t\timage={ 'https://image.tmdb.org/t/p/w500' + popMovie.poster_path }  \n\t\t\t\ttitle=\"Contemplative Reptile\"\t/>\t\t\t\t\n\t\t\t<Typography gutterBottom variant=\"h4\" style={{ flexGrow: '1', marginTop: '2%' }}>{ popMovie.title }</Typography>\n\t\t\t<Typography style={{ flexGrow: '1' }}><span style={{ fontWeight: 'bold' }}>Genres:</span> {listOfGenres} </Typography>\n\t\t\t<Typography variant=\"h5\">Describe</Typography>\n\t\t\t<Typography component=\"p\" style={{ width: `90%`, margin: '10px auto', textAlign: 'left', flexGrow: '5'}}>{ popMovie.overview }</Typography>\n\t\t\t<div style={{ }}>\n\t\t\t\t<CardActions>\n\t\t\t\t\t{ AddFavouriteMovie(props.favouriteMovies, popMovie, props.addFavouriteMovie) }\n\t\t\t\t\t{ RemoveFavoriteMovie(props.favouriteMovies, popMovie, props.removeFavouriteMovie) }\n\t\t\t\t\t<Link to={`/movie/${popMovie.id}`}>\n\t\t\t\t\t\t<Button size=\"small\" color=\"primary\">Read More</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t</CardActions>\n\t\t\t</div>\n\t\t</Card>\n\t})\n\n\tconst styleListOfCards = () => {\n\t\tif (window.matchMedia(\"(max-width: 600px)\").matches) {\n\t\t\treturn { display: `flex`, flexDirection: 'column' }\n\t\t} else {\n\t\t\treturn { display: `flex`, flexWrap: `wrap`, justifyContent: 'space-between' }\n\t\t}\t\t\n\t}\n\t\n\treturn (\n\t\t<div style={{ width: `98%`, margin: '0 auto' }}>\n\t\t\t<Typography variant=\"h4\" style={{ margin: '1% auto' }} >\n\t\t\t\tThe most popular movies\n\t\t\t</Typography>\n\t\t\t<ul style={ styleListOfCards() }>\n\t\t\t\t{ popMovies }\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = state => ({\n\tfavouriteMovies: state.favouriteMovies\n})\n\nconst mapDispatchToProps = dispatch => ({\n\taddFavouriteMovie: (movie) => dispatch( addFavouriteMovie(movie) ),\n\tremoveFavouriteMovie: (movie) => dispatch( removeFavouriteMovie(movie) )\n})\n\nconst CartOfMovie = connect(mapStateToProps, mapDispatchToProps)(cartOfMovie)\n\nexport default CartOfMovie","import React, { Component } from \"react\";\nimport axios from 'axios'\n\nimport Card from '../../node_modules/@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nclass InfoTheMovie extends Component {\n\tstate = {\n\t\tdataMovie: {},\n\t\trecomendationMovies: []\n\t}\n\n\tcomponentDidMount() {\n\t\tconst getInfoMovie = () => \n\t\t\taxios.get(`https://api.themoviedb.org/3${this.props.location.pathname}?api_key=e842780f24447ce021759d2711fd23ce&language=en-US`)\n\t\t\t\t.then( res => this.setState({ dataMovie: res.data }) )\n\t\t\t\t.catch(err => console.log( err.message ))\t\n\t\tgetInfoMovie()\n\t\t\n\t\tconst getRecommendation = () =>\n\t\t\taxios.get(`https://api.themoviedb.org/3${this.props.location.pathname}/recommendations?api_key=e842780f24447ce021759d2711fd23ce&language=en-US&page=1`)\n\t\t\t\t.then( res => {\tthis.setState({ recomendationMovies: res.data.results }) })\n\t\t\t\t.catch(err => console.log( err.message ))\n\t\tgetRecommendation()\n\t}\n\n\trender() {\n\t\tconst Genres = this.state.dataMovie.genres === undefined ? null :  this.state.dataMovie.genres.map( genre => (\n\t\t\t<span key={ genre.id } > { genre.name } </span>\n\t\t) )\n\n\t\tconst recomendationMovies = []\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tif ( this.state.recomendationMovies[i] !== undefined  ) {\n\t\t\t\trecomendationMovies.push( this.state.recomendationMovies[i].title )\n\t\t\t}\n\t\t}\n\t\tconst showRecomendationMovies = recomendationMovies.map( movie => (\n\t\t\t<span> { movie } </span>\n\t\t))\n\n// will show data like:\n// data-mounth-year : 22 january 2017\n\t\t// const releaseDate = Date.parse(this.state.dataMovie.release_date)\n\t\t// console.log(releaseDate)\n\n\t\treturn (\n\t\t\t<Card style={{ width: '80%', margin: '2% auto', textAlign: 'left' }}>\n\t\t\t\t<div style={{ width: '80%', margin: '2% auto' }}>\n\t\t\t\t\t<Typography variant='h2' style={{ marginBottom: '20px', marginTop: '10px', textAlign: 'center' }}>{ this.state.dataMovie.title }</Typography>\n\t\t\t\t\t<CardMedia \n\t\t\t\t\t\tstyle={{ margin: '10px auto', height: `350px`, width: '400px' }}\n\t\t\t\t\t\timage={ 'https://image.tmdb.org/t/p/w500' + this.state.dataMovie.backdrop_path }\n\t\t\t\t\t\ttitle = 'mainImg' />\n\t\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t\t<span style={{ fontWeight: 'bold' }}>Budget:</span> { this.state.dataMovie.budget }$<br/> \n\t\t\t\t\t\t<span style={{ fontWeight: 'bold' }}>Vote:</span> { this.state.dataMovie.vote_average }<br/>\n\t\t\t\t\t\t<span style={{ fontWeight: 'bold' }}>Release Date:</span> { this.state.dataMovie.release_date }\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\t<span style={{ fontWeight: 'bold' }}>Genres:</span> { Genres }\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"p\" style={{ width: '90%', margin: '10px auto' }}>\n\t\t\t\t\t\t<Typography variant=\"h4\">Describe</Typography>\n\t\t\t\t\t\t{ this.state.dataMovie.overview }\t\t\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t\t<span style={{ fontWeight: 'bold' }} >Recommendations:</span> { showRecomendationMovies }\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<p> Enjoy your watch !</p>\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\t\nexport default InfoTheMovie","import React from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nimport Card from '../../node_modules/@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nimport { Link } from 'react-router-dom'\nimport { addFavouriteMovie, removeFavouriteMovie } from '../store/actions/actionCreators'\n\nimport { AddFavouriteMovie, RemoveFavoriteMovie } from '../components/UI/ButtonsFavouriteMovies/ButtonsFavouriteMovies'\nimport { getLoadMoreSearchMovies } from '../store/actions/actionCreators'\n\nfunction ListSearch(props) {\n\n  const styleCard = () => {\n\t\tif (window.matchMedia(\"(max-width: 900px)\").matches) {\n\t\t\treturn {\n        display: `flex`,\n        width: \"92%\",\n        margin: \"0 auto\",\n        marginTop: \"14px\",\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexDirection: 'column'\n      }\n\t\t} else {\n\t\t\treturn {\n        display: `flex`,\n        width: \"92%\",\n        margin: \"0 auto\",\n        marginTop: \"14px\",\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }\n\t\t}\t\t\n  }\n\n  const styleText = () => {\n    if (window.matchMedia(\"(max-width: 900px)\").matches) {\n      return {\n        width: \"90%\"\n      }\n    } else {\n      return {\n        width: \"50%\"\n      }\n    }\n  }\n\n  const styleDateAverage = () => {\n    if (window.matchMedia(\"(max-width: 900px)\").matches) {\n      return {\n        width: \"80%\"\n      }\n    } else {\n      return {\n        width: \"20%\"\n      }\n    }\n  }\n\n  const styleButton = () => {\n    if (window.matchMedia(\"(max-width: 900px)\").matches) {\n      return {\n        width: \"90%\"\n      }\n    } else {\n      return {\n        width: \"20%\"\n      }\n    }\n  }\n\n  const ListSearchMovies = props.searchMovies.map( movie =>\n    <Card key={ movie.id } \n          style={ styleCard() }>\n      <CardMedia\n\t\t\t\tstyle={{ width: \"200px\", height: `200px` }}\n\t\t\t\timage={ 'https://image.tmdb.org/t/p/w500' + movie.poster_path }  \n\t\t\t\ttitle=\"Contemplative Reptile\"\t/>\n      <div style={ styleText() }>\n        <Typography variant=\"h4\"> {movie.title} </Typography>\n        <Typography component=\"p\" style={{ width: '80%', margin: '0 auto', paddingTop: '2%', paddingBottom: '2%', textAlign: 'left' }}>\n            {\n              (movie.overview.lenght < 300) ? movie.overview : movie.overview.slice(0, 300) + `...`\n            } \n        </Typography>    \n      </div>\n      <div style={ styleDateAverage() }>\n        <Typography component=\"p\">\n            Release date - <strong>{ movie.release_date }</strong>\n        </Typography>\n        <Typography component=\"p\" >\n          Vote average - <strong>{ movie.vote_average }</strong>  \n        </Typography>\n      </div>\n      <div style={ styleButton() }>\n        { AddFavouriteMovie(props.favouriteMovies, movie, props.addFavouriteMovie) }\n        { RemoveFavoriteMovie(props.favouriteMovies, movie, props.removeFavouriteMovie) }\n        <Link to={`/movie/${movie.id}`} onClick={()=> console.log('AU')}>\n          <Button size=\"small\" color=\"primary\">Read More</Button>\n        </Link>\n      </div>\t\n    </Card> )\n\n  const getMoreMovies = () => {\n    const requestMoreSearchMovies = () =>\n      axios.get(`https://api.themoviedb.org/3/search/movie?api_key=e842780f24447ce021759d2711fd23ce&language=en-US&query=${props.searchField}&page=${props.currentPage}&include_adult=false`)  \n    props.getLoadMoreSearchMovies( requestMoreSearchMovies )\n  }\n\n  return (\n    <div>\n      { ListSearchMovies }\n      { (props.currentPage < props.totalPages) ?\n        <Button \n          color=\"primary\" \n          style={{ margin: \"30px auto\" }}\n          onClick={ getMoreMovies } >I haven't choiced, pleace more movies</Button> :\n        <Typography variant=\"h4\" style={{ margin: \"30px auto\" }}> This is the End ! </Typography>\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  searchMovies: state.searchMovies,\n  searchField: state.searchField,\n  currentPage: state.currentPage,\n  totalPages: state.totalPages,\n  favouriteMovies: state.favouriteMovies\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getLoadMoreSearchMovies: requestMoreSearchMovies => dispatch( getLoadMoreSearchMovies( requestMoreSearchMovies ) ),\n  addFavouriteMovie: (movie) => dispatch( addFavouriteMovie(movie) ),\n\tremoveFavouriteMovie: (movie) => dispatch( removeFavouriteMovie(movie) )\n})\n\nexport default connect( mapStateToProps, mapDispatchToProps )( ListSearch )","import React from 'react'\n\nimport TextField from '@material-ui/core/TextField';\n\nconst autentification = (props) => {\n\n    return (\n        <div style={{ width: `50%`, height: `300px`, margin: 'auto' }}>\n            <form>\n            <TextField\n                error\n                id=\"outlined-email-input\"\n                label=\"Email\"\n                // className={classes.textField}\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                margin=\"normal\"\n                variant=\"outlined\"\n            />\n            <TextField\n                error\n                id=\"outlined-password-input\"\n                label=\"Password\"\n                // className={classes.textField}\n                type=\"password\"\n                autoComplete=\"current-password\"\n                margin=\"normal\"\n                variant=\"outlined\"\n            />\n            </form>\n        </div>\n    )\n}\n\nexport default autentification;","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '../../../node_modules/@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\nimport { Link } from 'react-router-dom'\nimport { addFavouriteMovie, removeFavouriteMovie } from '../../store/actions/actionCreators'\nimport { RemoveFavoriteMovie } from '../UI/ButtonsFavouriteMovies/ButtonsFavouriteMovies'\n\nfunction ListFavouriteMovies(props) {\n\n  const styleCard = () => {\n\t\tif (window.matchMedia(\"(max-width: 900px)\").matches) {\n\t\t\treturn {\n        display: `flex`,\n        width: \"92%\",\n        margin: \"0 auto\",\n        marginTop: \"14px\",\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexDirection: 'column'\n      }\n\t\t} else {\n\t\t\treturn {\n        display: `flex`,\n        width: \"92%\",\n        margin: \"0 auto\",\n        marginTop: \"14px\",\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }\n\t\t}\t\t\n  }\n  \n  const styleDateAverage = () => {\n    if (window.matchMedia(\"(max-width: 900px)\").matches) {\n      return {\n        width: \"80%\"\n      }\n    } else {\n      return {\n        width: \"20%\"\n      }\n    }\n  }\n\n  const FavouriteMovies = props.favouriteMovies.map( movie =>\n    <Card key={ movie.id } \n          style={ styleCard() }>\n\n      <CardMedia\n\t\t\t\tstyle={{ width: \"200px\", height: `200px` }}\n\t\t\t\timage={ 'https://image.tmdb.org/t/p/w500' + movie.poster_path }  \n\t\t\t\ttitle=\"Contemplative Reptile\"\t/>\n      <div>\n        <Typography variant=\"h4\"> {movie.title} </Typography>\n        <Typography component=\"p\" style={{ width: '75%', margin: '0 auto', paddingTop: '2%', paddingBottom: '2%', textAlign: 'left' }}>\n          {(movie.overview.lenght < 300) ? movie.overview : movie.overview.slice(0, 300) + `...`} \n        </Typography>    \n      </div>\n      <div style={ styleDateAverage() }>\n        <Typography component=\"p\">\n            Release date - { movie.release_date }\n        </Typography>\n        <Typography component=\"p\" >\n          Vote average - { movie.vote_average }  \n        </Typography>\n      </div>\n      { RemoveFavoriteMovie(props.favouriteMovies, movie, props.removeFavouriteMovie) }\n      <Link to={`/movie/${movie.id}`}>\n        <Button size=\"small\" color=\"primary\">Read More</Button>\n      </Link>\n    </Card> )\n\n\n  return (\n    <div>\n      <Typography variant=\"h3\">My favourite movies</Typography>\n      { FavouriteMovies }\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  favouriteMovies: state.favouriteMovies\n})\n\nconst mapDispatchToProps = dispatch => ({\n\taddFavouriteMovie: (movie) => dispatch( addFavouriteMovie(movie) ),\n\tremoveFavouriteMovie: (movie) => dispatch( removeFavouriteMovie(movie) )\n})\n\nexport default connect( mapStateToProps, mapDispatchToProps )( ListFavouriteMovies )","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport './App.css';\n\nimport Header from './header/Header'\nimport CartOfMovie from './cartOfMovie/cartOfMovie'\nimport InfoTheMovie from './infoTheMovie/InfoTheMovie'\nimport ListSearch from './listSearchMovies/ListSearch'\nimport Autentification from './components/Autentification/Autentification'\nimport ListFavouriteMovies from './components/ListFavouriteMovies/ListFavouriteMovies'\n\nimport { getPopularMovie, getInfoMovie } from './store/actions/actionCreators'\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.getPopularMovie()\n\t}\n\n\trender() {\n\t\tconst ListPopMovies = () => (\n\t\t\t<CartOfMovie\n\t\t\t\tpopMovies={this.props.popularMovieList}\n\t\t\t\tgenreMovie={this.props.genreMovie} />\n\t\t)\n\n    return (\n\t\t\t<BrowserRouter basename=\"/redux-saga.movieAPI\">\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Route path='/' component={Header} />\n\t\t\t\t\t<Route exact path='/' component={ListPopMovies} />\n\t\t\t\t\t<Route path='/search' component={ListSearch} />\n\t\t\t\t\t<Route path=\"/movie\" component={InfoTheMovie} />\n\t\t\t\t\t<Route path='/autentification' component={Autentification} />\n\t\t\t\t\t<Route path='/favouriteMovies' component={ListFavouriteMovies} />\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ \n\tpopularMovieList: state.popularMovieList,\n\tgenreMovie: state.genreMovie \n})\n\nconst mapDispatchToProps = dispatch => ({\n\tgetPopularMovie: () => dispatch( getPopularMovie() ),\n\tgetInfoMovie: () => dispatch( getInfoMovie() ),\n})\n\nexport default connect( mapStateToProps, mapDispatchToProps )(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import {  } from '../actions/actionCreators'\n\nconst initialState = {\n\tmovie: 1012,\n\tpopularMovieList: [],\n\tgenreMovie: [],\n\tinfoMovie: {},\n\trequestSearchMovie: null,\n\tsearchField: '',\n\tsearchMovies: [],\n\tcurrentPage: null,\n\ttotalPages: null,\n\tautentification: false,\n\tfavouriteMovies: []\n}\n\nconst movieReducer = ( state = initialState, action ) => {\n\tswitch( action.type ) {\n\t\tcase 'GET_LOAD_MOVIE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmovie: 777 \t\n\t\t\t}\n\t\tcase 'GET_POPULAR_MOVIE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopularMovieList: action.popularMovieList\n\t\t\t}\n\t\tcase 'GET_GENRE_LIST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgenreMovie: action.genreMovie\n\t\t\t}\n\t\tcase 'GET_LOAD_SEARCH_MOVIES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequestSearchMovie: action.requestSearchMovie,\n\t\t\t\tsearchField: action.searchField\n\t\t\t}\n\t\tcase 'GET_SEARCH_MOVIES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchMovies: action.data,\n\t\t\t\tcurrentPage: action.currentPage + 1,\n\t\t\t\ttotalPages: action.totalPages\n\t\t\t}\n\t\tcase 'GET_MORE_SEARCH_MOVIES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchMovies: [ ...state.searchMovies , ...action.data],\n\t\t\t\tcurrentPage: action.currentPage + 1,\n\t\t\t\ttotalPages: action.totalPages\n\t\t\t}\t\n\t\tcase 'ADD_FAVOURITE_MOVIE':\n\t\tconst favouriteMovies = state.favouriteMovies.some( movie => movie.id === action.movie.id )\n\t\t\t? state.favouriteMovies \n\t\t\t: [...state.favouriteMovies, action.movie]\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfavouriteMovies\n\t\t\t}\n\t\tcase 'REMOVE_FAVOURITE_MOVIE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfavouriteMovies: state.favouriteMovies.filter( movie => movie.id !== action.movie.id )\n\t\t\t}\t\t\t\n\t\tdefault:\n\t\t\treturn state\t\n\t}\n}\n\n// const rootReducer = combineReducers({ movie: movieReducer })\nexport const rootReducer = movieReducer\n","import { call, put } from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport { getSearchMovies, getMoreSearchMovies } from '../actions/actionCreators'\n\nconst requestPopularMovie = () => \n\taxios.get('https://api.themoviedb.org/3/movie/top_rated?api_key=e842780f24447ce021759d2711fd23ce&language=en-US&page=1')\n\t\nconst requestGenreMovie = () => \n\taxios.get('https://api.themoviedb.org/3/genre/movie/list?api_key=e842780f24447ce021759d2711fd23ce&language=en-US&page=1&language=en-US')\t\n\t\n// const requestSearchMovies = searchField =>\n// \taxios.get(`https://api.themoviedb.org/3/search/movie?api_key=e842780f24447ce021759d2711fd23ce&language=en-US&query=${searchField}&page=1&include_adult=false`)\t\n\nexport function* getPopularMovieSaga() {\n\ttry {\n\t\tconst result = yield call( requestPopularMovie )\n\t\tyield put({\n\t\t\ttype: 'GET_POPULAR_MOVIE', \n\t\t\tpopularMovieList: result.data.results \n\t\t})\n\t}\tcatch(error) {\n\t\tconsole.log(error.message)\n\t}\n}\n\nexport function* getGenreMovieSaga() {\n\ttry {\n\t\tconst result = yield call( requestGenreMovie )\n\t\tyield put({\n\t\t\ttype: 'GET_GENRE_LIST',\n\t\t\tgenreMovie: result.data.genres\n\t\t})\n\t} catch(error) {\n\t\tconsole.log( error.message )\n\t}\n}\n\nexport function* getSearchMoviesSaga(action) {\n\ttry {\n\t\tconst result = yield call( action.requestSearchMovies )\n\t\tyield put( getSearchMovies( result.data.results, result.data.page, result.data.total_pages ) )\n\t} catch(error) {\n\t\tconsole.log(error.message)\n\t}\n}\n\nexport function* getMoreSearchMoviesSaga(action) {\n\ttry {\n\t\tconst result = yield call( action.requestMoreSearchMovies )\n\t\tyield put( getMoreSearchMovies( result.data.results, result.data.page, result.data.total_pages ) )\n\t} catch(error) {\n\t\tconsole.log(error.message)\n\t}\n}","import { takeEvery } from 'redux-saga/effects'\n\nimport { \t\n\tgetPopularMovieSaga, \n\tgetGenreMovieSaga, \n\tgetSearchMoviesSaga, \n\tgetMoreSearchMoviesSaga \n} from './sagas'\n\nimport * as actionTypes from '../actions/actionTypes'\n\nexport default function* rootSaga() {\n\tyield takeEvery(actionTypes.GET_LOAD_MOVIE, getPopularMovieSaga)\n\tyield takeEvery(actionTypes.GET_LOAD_MOVIE, getGenreMovieSaga)\n\tyield takeEvery(actionTypes.GET_LOAD_SEARCH_MOVIES, getSearchMoviesSaga)\n\tyield takeEvery(actionTypes.GET_LOAD_MORE_SEARCH_MOVIES, getMoreSearchMoviesSaga)\n}","import createSagaMiddleware from 'redux-saga'\nimport { applyMiddleware, createStore, compose } from 'redux'\nimport { rootReducer } from './reducers/rootReducer'\nimport rootSaga from './sagas/rootSaga'\nimport persistState from 'redux-localstorage'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() \n\nconst store = createStore( \n    rootReducer,\n    compose(\t\n        applyMiddleware( sagaMiddleware ), \n        persistState(), \n        // reduxDevTools\t\n        )\t\n)\n\nsagaMiddleware.run( rootSaga )\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//https://codepen.io/BenSmith/pen/boapwY?editors=0010//\nimport { Provider } from 'react-redux'\nimport Store from './store/store'\n\nReactDOM.render(\n\t<Provider store={ Store }>\n\t\t<App />\n\t</Provider>,\n\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}